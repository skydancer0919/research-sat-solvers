/*	DIMETHEUS SAT SOLVER
 * 	Author:		Oliver Gableske	(oliver@gableske.net)
 *	Website:	http://www.gableske.net/dimetheus
 *  License:	See ./doc/license.txt
 */

#ifndef PERMUTATIONS_H_
#define PERMUTATIONS_H_

#include "tools.h"

//This implements clause permutations that are generated incrementally using a Galois Linear Feedback Shift Register.

uint32_t perm_lfsr_state;		//The current state of the Galois LFSR.
uint32_t perm_lfsr_tap;			//The current tap of the Galois LFSR.
uint32_t perm_lfsr_perLen;		//The period length of the currently initialized LFSR.
uint32_t perm_lfsr_bitLen;		//The size of the currently initialized LFSR in bits.

//The following source generates permutations based on a linear feedback shift register over GF(2).
//Compute the prime polynomials for a register size k using MATLAB with primpoly(k, 'all'),up to order 2^16, or check this
//website for higher orders: http://theory.cs.uvic.ca/gen/poly.html.
//Each value in the following array, that holds a set of primitive polynomials for each k, is the binary representation of the
//factors in the polynomial of grade 32 shifted one right. So 3 equals the primitive polynomial x^2+^1+1, in binary this would
//be 0000.....111 >> 1 = 0000....0011 = 3.
static const uint32_t perm_lfsr_taps[32][64] = {
/* 0*/{         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u},
/* 1*/{         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u,         1u},
/* 2*/{         3u,         3u,         3u,         3u,         3u,         3u,         3u,         3u,         3u,         3u,         3u,         3u,         3u,         3u,         3u,         3u,         3u,         3u,         3u,         3u,         3u,         3u,         3u,         3u,         3u,         3u,         3u,         3u,         3u,         3u,         3u,         3u,         3u,         3u,         3u,         3u,         3u,         3u,         3u,         3u,         3u,         3u,         3u,         3u,         3u,         3u,         3u,         3u,         3u,         3u,         3u,         3u,         3u,         3u,         3u,         3u,         3u,         3u,         3u,         3u,         3u,         3u,         3u,         3u},
/* 3*/{         5u,         6u,         5u,         6u,         5u,         6u,         5u,         6u,         5u,         6u,         5u,         6u,         5u,         6u,         5u,         6u,         5u,         6u,         5u,         6u,         5u,         6u,         5u,         6u,         5u,         6u,         5u,         6u,         5u,         6u,         5u,         6u,         5u,         6u,         5u,         6u,         5u,         6u,         5u,         6u,         5u,         6u,         5u,         6u,         5u,         6u,         5u,         6u,         5u,         6u,         5u,         6u,         5u,         6u,         5u,         6u,         5u,         6u,         5u,         6u,         5u,         6u,         5u,         6u},
/* 4*/{         9u,        12u,         9u,        12u,         9u,        12u,         9u,        12u,         9u,        12u,         9u,        12u,         9u,        12u,         9u,        12u,         9u,        12u,         9u,        12u,         9u,        12u,         9u,        12u,         9u,        12u,         9u,        12u,         9u,        12u,         9u,        12u,         9u,        12u,         9u,        12u,         9u,        12u,         9u,        12u,         9u,        12u,         9u,        12u,         9u,        12u,         9u,        12u,         9u,        12u,         9u,        12u,         9u,        12u,         9u,        12u,         9u,        12u,         9u,        12u,         9u,        12u,         9u,        12u},
/* 5*/{        18u,        30u,        27u,        23u,        29u,        20u,        18u,        30u,        27u,        23u,        29u,        20u,        18u,        30u,        27u,        23u,        29u,        20u,        18u,        30u,        27u,        23u,        29u,        20u,        18u,        30u,        27u,        23u,        29u,        20u,        18u,        30u,        27u,        23u,        29u,        20u,        18u,        30u,        27u,        23u,        29u,        20u,        18u,        30u,        27u,        23u,        29u,        20u,        18u,        30u,        27u,        23u,        29u,        20u,        18u,        30u,        27u,        23u,        29u,        20u,        18u,        30u,        27u,        18u},
/* 6*/{        33u,        51u,        54u,        45u,        57u,        48u,        33u,        51u,        54u,        45u,        57u,        48u,        33u,        51u,        54u,        45u,        57u,        48u,        33u,        51u,        54u,        45u,        57u,        48u,        33u,        51u,        54u,        45u,        57u,        48u,        33u,        51u,        54u,        45u,        57u,        48u,        33u,        51u,        54u,        45u,        57u,        48u,        33u,        51u,        54u,        45u,        57u,        48u,        45u,        57u,        48u,        33u,        51u,        54u,        45u,        57u,        48u,        33u,        51u,        54u,        45u,        57u,        48u,        33u},
/* 7*/{        65u,        85u,        71u,       126u,        92u,        68u,       114u,        95u,       119u,       101u,        83u,       123u,        72u,       106u,       105u,       120u,        78u,        96u,        65u,        85u,        71u,       126u,        92u,        68u,       114u,        95u,       119u,       101u,        83u,       123u,        72u,       106u,       105u,       120u,        78u,        96u,        65u,        85u,        71u,       126u,        92u,        68u,       114u,        95u,       119u,       101u,        83u,       123u,        72u,       106u,       105u,       120u,        78u,        96u,        65u,        85u,        71u,       126u,        92u,        68u,       114u,        95u,       119u,       101u},
/* 8*/{       142u,       180u,       243u,       149u,       178u,       177u,       198u,       150u,       175u,       225u,       212u,       195u,       166u,       231u,       250u,       184u,       142u,       180u,       243u,       149u,       178u,       177u,       198u,       150u,       175u,       225u,       212u,       195u,       166u,       231u,       250u,       184u,       142u,       180u,       243u,       149u,       178u,       177u,       198u,       150u,       175u,       225u,       212u,       195u,       166u,       231u,       250u,       184u,       142u,       180u,       243u,       149u,       178u,       177u,       198u,       150u,       175u,       225u,       212u,       195u,       166u,       231u,       250u,       175u},
/* 9*/{       264u,       300u,       408u,       393u,       278u,       315u,       432u,       365u,       450u,       500u,       497u,       455u,       437u,       269u,       311u,       486u,       441u,       485u,       318u,       429u,       490u,       330u,       350u,       378u,       359u,       303u,       509u,       483u,       394u,       347u,       338u,       380u,       476u,       343u,       337u,       447u,       399u,       423u,       323u,       360u,       308u,       474u,       413u,       492u,       281u,       401u,       438u,       272u,       264u,       300u,       408u,       393u,       278u,       315u,       432u,       365u,       450u,       500u,       497u,       455u,       437u,       269u,       311u,       486u},
/*10*/{       516u,       646u,      1020u,       567u,       934u,       765u,       525u,       657u,       664u,       777u,       945u,       754u,       652u,       831u,       938u,       711u,       924u,      1017u,       873u,       931u,       627u,       969u,       739u,       619u,       858u,       562u,       534u,       958u,       828u,       531u,       763u,       813u,       864u,       639u,       778u,       912u,       693u,       633u,       879u,       966u,       836u,      1005u,       984u,       581u,       720u,       940u,       786u,       807u,       683u,       610u,       801u,       894u,       910u,       673u,       670u,       795u,       706u,       907u,       715u,       576u,       652u,       831u,       938u,       711u},
/*11*/{      1613u,      1757u,      1871u,      1902u,      1186u,      1391u,      1369u,      1400u,      1340u,      1743u,      1853u,      1508u,      1352u,      1635u,      1604u,      1523u,      1197u,      1136u,      1995u,      1764u,      2022u,      1649u,      1611u,      1625u,      1358u,      1932u,      1686u,      1363u,      1370u,      1275u,      1475u,      1080u,      1217u,      1720u,      1827u,      1808u,      1108u,      1502u,      1085u,      1251u,      1433u,      1526u,      1776u,      1482u,      1779u,      1652u,      1758u,      2006u,      1452u,      1470u,      1873u,      1992u,      1848u,      1260u,      1172u,      1719u,      1748u,      2034u,      1895u,      1346u,      1210u,      1786u,      1966u,      1638u},
/*12*/{      2460u,      3663u,      2726u,      2646u,      2396u,      2860u,      3752u,      3551u,      3471u,      2587u,      2643u,      4062u,      2100u,      3269u,      2152u,      2331u,      2219u,      2956u,      2954u,      2858u,      3592u,      3561u,      2463u,      3144u,      2786u,      3191u,      3353u,      3852u,      3715u,      2488u,      4068u,      3040u,      2334u,      3705u,      3380u,      2110u,      3033u,      3745u,      2795u,      3863u,      2191u,      3164u,      2446u,      2761u,      2563u,      3953u,      3586u,      3911u,      3450u,      3012u,      2618u,      2470u,      2224u,      2851u,      3897u,      3874u,      2508u,      2820u,      3250u,      3684u,      3226u,      2361u,      3461u,      3891u},
/*13*/{      7187u,      6830u,      7645u,      4302u,      5618u,      7870u,      4397u,      4752u,      6823u,      8046u,      4940u,      5540u,      7025u,      7147u,      5383u,      5648u,      5977u,      5285u,      6641u,      5135u,      6864u,      5335u,      4165u,      5581u,      4778u,      7371u,      4547u,      5497u,      7152u,      8132u,      4441u,      6404u,      7583u,      6998u,      7220u,      6018u,      6802u,      7806u,      7709u,      6935u,      7809u,      7751u,      6765u,      5345u,      6903u,      5112u,      6154u,      7986u,      5960u,      5567u,      8079u,      6063u,      8091u,      4178u,      4257u,      6263u,      7296u,      6464u,      8177u,      7182u,      5963u,      4550u,      7454u,      5886u},
/*14*/{      8564u,     12067u,     13663u,      8914u,      9984u,     10723u,     14703u,     11185u,     10744u,      9541u,     14045u,      8286u,     11180u,     11097u,     10822u,     16233u,     13511u,     15829u,     12163u,     10707u,     14959u,     11104u,     13916u,     16089u,      9004u,     11856u,      9428u,     11295u,     10946u,     11003u,     11031u,     11280u,     14251u,      8979u,      9249u,     11878u,     15337u,      8428u,      8650u,     15857u,      8526u,     13717u,     14102u,      9790u,      9264u,     12628u,     12569u,     15370u,     10477u,     14974u,     11765u,     13059u,     15289u,     12791u,     14141u,     13320u,     13608u,      9636u,     11085u,     11503u,     14989u,     15969u,     10976u,     13139u},
/*15*/{     17300u,     18462u,     19690u,     17236u,     29442u,     20570u,     20361u,     18032u,     28931u,     31745u,     19311u,     17751u,     19611u,     32579u,     26387u,     19661u,     23513u,     16956u,     30874u,     29126u,     19766u,     21275u,     17080u,     21838u,     31527u,     23724u,     21923u,     27271u,     25186u,     20497u,     24125u,     29922u,     32759u,     26319u,     17105u,     19188u,     27055u,     19758u,     24347u,     16560u,     19037u,     26045u,     19549u,     24801u,     17194u,     26465u,     21257u,     32688u,     16824u,     25757u,     29310u,     28840u,     29931u,     17019u,     23163u,     31372u,     19618u,     32440u,     22321u,     32301u,     25752u,     27027u,     31704u,     26897u},
/*16*/{     57104u,     59190u,     47276u,     47463u,     46116u,     51582u,     51381u,     42237u,     41531u,     36471u,     54078u,     36539u,     59313u,     34776u,     43612u,     43989u,     38814u,     53379u,     47723u,     51994u,     51496u,     39442u,     46956u,     42547u,     52387u,     46914u,     56050u,     55098u,     54098u,     42048u,     57299u,     59277u,     61414u,     65464u,     57580u,     54487u,     47734u,     44035u,     62418u,     53303u,     64184u,     60513u,     48686u,     43312u,     59051u,     45717u,     36711u,     64071u,     39191u,     43015u,     58697u,     35131u,     39213u,     48946u,     45341u,     39777u,     48245u,     47905u,     43247u,     34320u,     45583u,     53031u,     37452u,     51937u},
/*17*/{     89349u,    100422u,     66329u,     88314u,     77951u,    104149u,     66973u,     83164u,    129397u,     74948u,     70237u,     74428u,    101039u,     96874u,     95306u,     94526u,     75773u,     79983u,    106702u,    108286u,     88775u,     90109u,     84125u,     68564u,     85181u,     98670u,     99894u,     90128u,     87470u,    117857u,     83696u,     85010u,    125061u,    107149u,     92663u,    122179u,    111275u,     88274u,     72128u,    130410u,    112926u,     74513u,    100134u,     72282u,     76827u,     66226u,     91961u,    123519u,     71736u,     83106u,     78188u,     76941u,    119809u,     94875u,    130233u,     71701u,     94119u,    109137u,     77270u,    120613u,     86395u,    123823u,     70801u,    102428u},
/*18*/{    237707u,    144402u,    138155u,    173711u,    198066u,    257991u,    200481u,    249089u,    215400u,    170085u,    181776u,    139928u,    257535u,    194222u,    204490u,    139330u,    244345u,    138985u,    185393u,    180516u,    156893u,    221283u,    138534u,    238345u,    206980u,    235923u,    140703u,    131568u,    148210u,    148278u,    195547u,    224919u,    234546u,    161264u,    213154u,    153463u,    226926u,    133491u,    203029u,    152853u,    234987u,    256459u,    188518u,    203238u,    219288u,    185598u,    234690u,    212341u,    230526u,    166409u,    161225u,    224446u,    207993u,    144379u,    152622u,    223795u,    131532u,    140459u,    211275u,    171979u,    178624u,    164785u,    140157u,    135171u},
/*19*/{    441180u,    516065u,    268332u,    422496u,    523861u,    352370u,    307056u,    368946u,    378428u,    445505u,    368271u,    522811u,    515161u,    416209u,    454534u,    507375u,    517926u,    262350u,    402293u,    473478u,    494021u,    264044u,    455802u,    426831u,    421740u,    361384u,    363854u,    404126u,    479260u,    286794u,    283299u,    457858u,    346691u,    498562u,    376618u,    368993u,    503319u,    422598u,    399792u,    299221u,    384097u,    356858u,    347416u,    409330u,    472686u,    486661u,    482834u,    285360u,    369878u,    515507u,    523122u,    303781u,    513720u,    294779u,    294220u,    340822u,    490120u,    391507u,    274434u,    405620u,    472676u,    457657u,    286878u,    503689u},
/*20*/{    654390u,    812538u,    806112u,    745073u,   1011282u,    858267u,    814771u,    662937u,    755380u,    932558u,    781807u,   1025358u,    832411u,    862651u,    625911u,    821244u,    901707u,    602438u,    989466u,    691199u,    593159u,    648452u,    566361u,    899764u,    713405u,    654910u,    674980u,    706963u,    974247u,    752084u,    679541u,    632560u,    883036u,    583240u,    740828u,    693484u,    630184u,    699415u,    740347u,    860240u,    799769u,    618335u,    881369u,    949132u,    696483u,    572700u,    682811u,    931047u,    884763u,    567673u,    548231u,    776914u,    561633u,    930082u,    588595u,    899700u,    811481u,    605004u,    576760u,    925638u,    988952u,    907487u,    548746u,    558870u},
/*21*/{   1160470u,   1316005u,   1369396u,   1487256u,   1435235u,   1357174u,   1334550u,   1355532u,   1244745u,   1983714u,   1673002u,   1299472u,   1349404u,   1344108u,   1234596u,   1141133u,   1956516u,   1328048u,   1405005u,   1205043u,   1165745u,   1229619u,   1283144u,   1200628u,   1446385u,   1773390u,   2091544u,   1701308u,   1616942u,   1324808u,   1438609u,   1552306u,   1943135u,   1925897u,   1846719u,   1349493u,   1559597u,   1199340u,   1087128u,   1078055u,   1245954u,   1603854u,   1977303u,   1254422u,   1382613u,   1815648u,   1861909u,   1170353u,   1746314u,   2003433u,   1074855u,   1246286u,   1973544u,   1332725u,   1343471u,   1201153u,   1270203u,   1321340u,   1693187u,   1841435u,   1673057u,   2019846u,   1936335u,   1917433u},
/*22*/{   2865464u,   3534725u,   2455704u,   2440386u,   2437333u,   2761990u,   3183644u,   2759806u,   2260320u,   2905574u,   3127442u,   2333080u,   2901741u,   3171198u,   2705056u,   3553982u,   3468365u,   3079969u,   2194181u,   2853470u,   2635053u,   2954979u,   4159651u,   2245743u,   2108174u,   2928746u,   2369601u,   4040323u,   3965343u,   2674723u,   2496897u,   2803766u,   3119109u,   3601077u,   2376382u,   2386004u,   3923721u,   2978133u,   2776541u,   3507690u,   3848895u,   3793977u,   3369400u,   4076299u,   2964334u,   2758527u,   3624296u,   3456562u,   3733085u,   3963968u,   3229126u,   2150675u,   2240278u,   2378166u,   2594610u,   3035011u,   2125672u,   2435647u,   3225430u,   2321856u,   3599187u,   2812008u,   3117292u,   3607349u},
/*23*/{   7133027u,   5078768u,   6002975u,   4701069u,   5914286u,   4278819u,   7856136u,   6975569u,   5164488u,   5718903u,   5557923u,   5159511u,   6565218u,   7026091u,   6193878u,   5404664u,   5576109u,   8118548u,   4526798u,   6820253u,   6534924u,   6257812u,   6053275u,   5784673u,   7893767u,   4809456u,   7425018u,   6460012u,   5421564u,   6181219u,   8221218u,   4988099u,   6099818u,   8288221u,   7940785u,   8258384u,   5850100u,   6719470u,   6659247u,   5411174u,   6305033u,   7509431u,   7667995u,   8366577u,   5489261u,   7351781u,   8312562u,   4637489u,   7809946u,   6692164u,   5190923u,   5565210u,   8251256u,   8242982u,   8278587u,   6217506u,   6889062u,   5062124u,   7559282u,   4217759u,   4633080u,   5470480u,   6761838u,   7799717u},
/*24*/{  14457417u,  11117235u,  13352268u,   8549583u,  15163386u,  12290386u,  11311449u,   9585797u,  10093453u,  11677983u,  10339316u,   9436202u,  12589050u,   9267436u,  12109018u,  16553914u,  10954768u,  14756928u,  15075345u,  13686795u,  15120381u,   8866531u,  10484716u,  10239812u,  13537465u,  11740212u,  16202655u,  12286508u,  13883507u,   9225849u,  10669838u,   9487236u,  16076373u,  10092713u,  13050804u,  16095578u,  16660582u,  16640784u,  11052672u,  12922923u,  16441573u,  11519060u,   9394083u,   8716372u,  15539536u,   9213014u,  16045120u,  14593250u,  15285181u,   9405326u,   8623559u,  12322555u,  13863691u,   9563776u,   8813393u,  11939182u,  12923490u,  10976610u,  11369230u,  14568761u,  10515682u,  16147161u,  10891279u,  13303104u},
/*25*/{  25937919u,  19167147u,  19448767u,  24803506u,  24718227u,  19038844u,  26019290u,  17966930u,  17417327u,  17843125u,  24405220u,  27570376u,  17633773u,  16944735u,  21090835u,  21679000u,  17274791u,  28393976u,  24588916u,  17308052u,  16921688u,  28610074u,  19561716u,  21050887u,  30271593u,  22929729u,  16877704u,  30267717u,  24077876u,  17145266u,  26956719u,  23768250u,  26782533u,  20823564u,  24919160u,  28423961u,  21500149u,  17236397u,  29430742u,  20266135u,  19422284u,  31542812u,  18497379u,  25232716u,  17463082u,  17730694u,  20090728u,  24515978u,  22865941u,  22956455u,  19565989u,  17676056u,  20282131u,  26442977u,  28968595u,  17425463u,  20692018u,  22803947u,  24734903u,  23793447u,  33126568u,  30604372u,  23197063u,  28620207u},
/*26*/{  59209647u,  51302254u,  42840292u,  57704516u,  45275197u,  63888785u,  50826250u,  41727403u,  34916025u,  65370131u,  48696519u,  54624181u,  57532840u,  51524033u,  65930968u,  45025913u,  63880317u,  40696209u,  49701177u,  36014236u,  35374463u,  47919838u,  62718945u,  36737665u,  59463287u,  46708756u,  39113576u,  48031335u,  42344829u,  47955996u,  63432627u,  58641639u,  53995859u,  59077278u,  33848211u,  58488082u,  39619624u,  58233149u,  35851033u,  53847653u,  60628742u,  34681866u,  47768655u,  54268812u,  43740967u,  45675790u,  64537534u,  44361525u,  39916535u,  55274193u,  48681732u,  50637289u,  41161840u,  49685601u,  65133983u,  37892709u,  53643766u,  56070877u,  35059395u,  52636975u,  57292778u,  49431351u,  51682763u,  63363825u},
/*27*/{  91285926u, 112542776u,  75026183u,  70562778u,  74687321u, 105242944u,  80355525u, 133189687u,  83608350u,  95609220u,  83325295u, 101472552u, 108466269u, 132193006u, 118619263u,  82861900u,  76042056u, 122546211u,  98603310u,  81976959u, 132758827u, 119896310u, 115891710u,  68144166u, 121420242u, 111512632u,  74359059u, 122097478u,  95475007u,  87423929u, 133228052u,  83276361u, 119636724u,  83962231u,  96937709u, 105435582u, 130075119u, 106130260u,  78027422u,  74350565u, 119829873u, 122997473u,  81307025u, 127530953u,  75654061u, 113915587u, 106529721u,  93029134u, 105727168u, 130997639u, 111569755u,  79589131u, 111935236u,  95228408u, 107334432u,  79500295u,  85752724u, 111376330u,  70597302u, 107487290u,  69350566u, 115907269u, 128963223u,  88412883u},
/*28*/{ 155502236u, 191724768u, 134889439u, 153404266u, 248199571u, 224957911u, 142221269u, 183156639u, 167977336u, 168766622u, 234347963u, 154139218u, 134944263u, 169678650u, 139538127u, 147503509u, 160322741u, 199352295u, 237981876u, 138237376u, 137305221u, 149995711u, 244488971u, 246691196u, 178944053u, 210589106u, 145969923u, 146516933u, 144807888u, 163909145u, 179606779u, 222880270u, 154181393u, 150349145u, 196693374u, 215495266u, 180175637u, 208665220u, 189556959u, 188003187u, 230761458u, 258768167u, 169147019u, 267517700u, 162753388u, 203069261u, 140762860u, 174763536u, 151410719u, 160604195u, 149895421u, 139608666u, 162981077u, 148759955u, 140030364u, 220123957u, 186128686u, 165058463u, 145907145u, 174983480u, 229928472u, 147081388u, 200196550u, 147599122u},
/*29*/{ 306559337u, 268980366u, 268630075u, 505321209u, 498517506u, 484663593u, 482476260u, 465166212u, 462532551u, 441604260u, 402736990u, 285270854u, 321254328u, 323121611u, 332308132u, 293299456u, 292974965u, 342576090u, 402368234u, 397520070u, 355017610u, 382601489u, 337641092u, 338229044u, 377834863u, 275630432u, 271100504u, 274329318u, 304159781u, 505225082u, 422023038u, 291426715u, 334687106u, 336717790u, 359144034u, 328128898u, 283620249u, 525638692u, 447354613u, 283005775u, 314875189u, 313533367u, 335608217u, 340236728u, 324897025u, 309076848u, 322259197u, 326945972u, 310586788u, 303698516u, 377508620u, 387317299u, 302435868u, 312734769u, 311503486u, 499265789u, 522941701u, 451214923u, 461724371u, 366988114u, 362261327u, 338988382u, 354187987u, 494769890u},
/*30*/{ 886543031u,1033946875u, 862272237u, 554942511u, 681982427u, 719108910u, 847897711u, 767326059u, 976265083u, 539580928u,1067086868u, 544067838u, 920365604u, 597998492u, 699290371u, 991904523u, 568314168u,1032927128u, 572578520u, 551159791u,1014488811u, 628598415u, 996268588u,1043851964u, 878332496u, 654989037u, 986132095u, 702748563u, 892363445u, 694871562u, 920847956u, 947737115u, 854437324u, 820277487u, 934420848u, 707943203u, 691899509u, 774318882u,1015044288u, 858051738u, 677121041u, 839290887u, 966059874u,1031887060u, 997742684u, 707186893u, 668393895u,1017904139u, 780843938u, 845939464u, 944855708u, 951003257u,1013112856u, 609263788u, 762902106u, 940338602u,1050549732u, 608788076u,1070459124u, 995847485u, 727343563u,1071593363u, 806023473u, 826421399u},
/*31*/{1159265500u,2099319049u,1211981581u,1088040849u,1087680632u,1168805398u,1187537038u,1082815703u,1130065859u,2097300428u,1289980891u,1336307271u,1513173065u,1261394396u,2146967737u,1359057156u,1143157311u,1188917137u,1075401756u,1113171062u,1513486001u,1181550679u,1190909540u,1347844328u,1111131295u,1810780527u,1319009588u,1187844955u,1146608025u,1081113712u,1156213627u,1287970561u,1975353178u,1301409582u,1153785855u,1152195255u,1160330938u,1762249785u,1586613591u,2021147720u,1396162799u,1140982335u,1141898360u,1515164196u,1285748196u,1528459971u,1852195116u,1171272583u,1106133209u,1233503528u,1231645943u,2143002009u,1262850566u,1083356658u,1249010904u,2058493719u,1095696353u,1171663249u,1301816423u,1107767742u,1374304167u,1235364310u,1136440192u,1130033919u}
};

inline static void perm_LFSR_reset(){
	perm_lfsr_bitLen		= 0;
	perm_lfsr_perLen		= 0;
	perm_lfsr_state			= 0;
	perm_lfsr_tap			= 0;
}

inline static void perm_LFSR_initSize(uint32_t maxElt){
	perm_lfsr_bitLen = (uint32_t)ceil(log2(maxElt));
	perm_lfsr_perLen = (1u << perm_lfsr_bitLen) - 1u;
}

inline static void perm_LFSR_initState(uint32_t maxElt){
	perm_lfsr_state = rand_random() % maxElt;
	if (perm_lfsr_state == 0u) ++perm_lfsr_state;
}

inline static void perm_LFSR_initTap(){
	perm_lfsr_tap = perm_lfsr_taps[perm_lfsr_bitLen][rand_random() % 64u];
}

inline static void perm_LFSR_init(uint32_t maxElt){
	++maxElt;
	perm_LFSR_initSize(maxElt);
	perm_LFSR_initState(maxElt);
	perm_LFSR_initTap();
}

inline static uint32_t perm_LFSR_nextState(){
	perm_lfsr_state = (perm_lfsr_state >> 1) ^ (-(perm_lfsr_state & 1u) & perm_lfsr_tap);
	return perm_lfsr_state - 1u;
}

inline static void perm_LFSR_dispose(){
	//Nothing to do.
}

inline static void perm_LFSR_printConfig_inline(){
	printf("LFSR: perm_lfsr_perLen: %u, perm_lfsr_bitLen: %u, perm_lfsr_state: %u, perm_lfsr_tap: %u",
			perm_lfsr_perLen, perm_lfsr_bitLen, perm_lfsr_state, perm_lfsr_tap);
}

#endif /* PERMUTATIONS_H_ */
